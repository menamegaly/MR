#!/bin/bash

# Skip manual check
if [ "$1" = 'manualcheck' ]; then
	echo 'Manual check: skipping'
	exit 0
fi

# OS check
OSVERSION=$(/usr/bin/sw_vers -productVersion | /usr/bin/cut -d . -f 2)
CWD=$(dirname $0)
CACHEDIR="$CWD/cache/"


# If OS version is 10.7 or lower
if [[ ${OSVERSION} -lt 8 ]]; then

    echo "Error: Caching module is only supported on 10.8 or higher"
    exit
    
# If OS version is 10.12 or lower
elif [[ ${OSVERSION} -lt 13 ]]; then

    if [ ! -f /Library/Server/Caching/Logs/Metrics.sqlite ]; then
        echo "Error: Caching metrics database not found! Is caching turned on?"

    else
        /usr/bin/sqlite3 /Library/Server/Caching/Logs/Metrics.sqlite "SELECT * FROM statsData;" > ${CACHEDIR}caching.txt
    fi

# Everything else, ie OS version is 13 or higher
else

    # Get caching server data
    MANAGER=$(/usr/bin/AssetCacheManagerUtil -aj status 2>/dev/null)
    
    # Get cache locator data
    LOCATOR=$(/usr/bin/AssetCacheLocatorUtil -j 2>/dev/null)
    
    # Merge the two variables as an invalid JSON
    CACHINGOUTPUT="${MANAGER}${LOCATOR}]"
    
    # Get epoch date
    DATE=$(date +%s)
    
    if [[ -f '/Library/Application Support/Apple/AssetCache/Metrics/Metrics.db' ]] ; then
        # Exact Metrics, only available on 10.13.4 and higher
        EXACT_METRICS=$(/usr/bin/sqlite3 "/Library/Application Support/Apple/AssetCache/Metrics/Metrics.db" <<!
.headers off
.mode csv
SELECT ZCREATIONDATE AS collectiondateepoch, ZREQUESTSFROMPEER AS requestsfrompeers, ZREQUESTSFROMCLIENT AS requestsfromclients, ZBYTESPURGEDYOUNGERTHAN1DAY AS bytespurgedyoungerthan1day, ZBYTESPURGEDYOUNGERTHAN7DAYS AS bytespurgedyoungerthan7days, ZBYTESPURGEDYOUNGERTHAN30DAYS AS bytespurgedyoungerthan30days, ZBYTESPURGEDTOTAL AS bytespurgedtotal, ZBYTESFROMPEERTOCLIENT AS bytesfrompeerstoclients, ZBYTESFROMORIGINTOPEER AS bytesfromorigintopeers, ZBYTESFROMORIGINTOCLIENT AS bytesfromorigintoclients, ZBYTESFROMCACHETOPEER AS bytesfromcachetopeers, ZBYTESFROMCACHETOCLIENT AS bytesfromcachetoclients, ZBYTESDROPPED AS bytesdropped, ZREPLIESFROMPEERTOCLIENT AS repliesfrompeerstoclients, ZREPLIESFROMORIGINTOPEER AS repliesfromorigintopeers, ZREPLIESFROMORIGINTOCLIENT AS repliesfromorigintoclients, ZREPLIESFROMCACHETOPEER AS repliesfromcachetopeers, ZREPLIESFROMCACHETOCLIENT AS repliesfromcachetoclients, ZBYTESIMPORTEDBYXPC AS bytesimportedbyxpc, ZBYTESIMPORTEDBYHTTP AS bytesimportedbyhttp, ZIMPORTSBYXPC AS importsbyxpc, ZIMPORTSBYHTTP AS importsbyhttp FROM ZMETRIC;
!)
        # Clean up returns to prevent JSON from complaining
        EXACT_METRICS='"'$(echo "${EXACT_METRICS}" | tr '\r\n' _)'"'
    else
        EXACT_METRICS='""'
    fi
        
    # Write the two JSON file to disk after merging them and include the datestamp
    printf "${CACHINGOUTPUT//\}\}]{\"results\":\{/,\"rundate\":$DATE,\"exact_metrics\":${EXACT_METRICS},}" > ${CACHEDIR}caching.txt

fi
